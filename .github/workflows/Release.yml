name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl]
    
    steps:
      - uses: actions/checkout@v4

      - name: Install musl-tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get update && sudo apt-get install musl-tools
        
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-index-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-rs for cross-compilation
        run: cargo install cross

      - name: Build binary
        run: cross build --release --target=${{ matrix.target }}

      - name: Rename binary
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: mv target/${{ matrix.target }}/release/macutil target/${{ matrix.target }}/release/macutil-aarch64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macutil-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/macutil*

  build-macos:
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-index-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build binary
        run: cargo build --release

      - name: Rename binary
        run: mv target/release/macutil target/release/macutil-macos

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macutil-macos
          path: target/release/macutil-macos

  release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Extract version from tag
        id: extract_version
        run: |
          version=${GITHUB_REF#refs/tags/v}
          echo "version=$version" >> $GITHUB_ENV
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ env.version }}
          body: |
            ## Downloads
            
            - **Linux x86_64**: `macutil`
            - **Linux aarch64**: `macutil-aarch64`
            - **macOS**: `macutil-macos`
            
            ## Installation
            
            Download the appropriate binary for your platform and make it executable:
            ```bash
            chmod +x macutil
            ./macutil
            ```

          files: |
            macutil-x86_64-unknown-linux-musl/macutil
            macutil-aarch64-unknown-linux-musl/macutil-aarch64
            macutil-macos/macutil-macos
            start.sh
            startdev.sh
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
